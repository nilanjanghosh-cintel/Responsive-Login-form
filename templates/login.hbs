<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page | Nilanjan Ghosht</title>
    <link rel="stylesheet" href="login.css">
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <style>
        body, html {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1; /* Ensure canvas is behind other elements */
            pointer-events: none; /* Prevent canvas from intercepting clicks */
        }
        .wrapper {
            position: relative;
            z-index: 1; /* Ensure wrapper is in front of the canvas */
        }
        .error-message {
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
            font-size: 1em;
            font-weight: 500;
            margin-top: 20px;
            padding: 15px;
            border: 1px solid transparent;
            border-radius: 0.25rem;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .error-message:hover {
            background-color: #f1b0b7;
            color: #491217;
        }

        .success-message {
            color: #155724;
            background-color: #d4edda;
            border-color: #c3e6cb;
            font-size: 1em;
            font-weight: 500;
            margin-top: 20px;
            padding: 15px;
            border: 1px solid transparent;
            border-radius: 0.25rem;
            transition: opacity 0.3s ease;
            opacity: 1;
        }

        .success-message.fade-out {
            opacity: 0;
        }
    </style>
</head>
<body>
    <!--Start of Tawk.to Script-->
<script type="text/javascript">
var Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();
(function(){
var s1=document.createElement("script"),s0=document.getElementsByTagName("script")[0];
s1.async=true;
s1.src='https://embed.tawk.to/66f6cfd14cbc4814f7e003e2/1i8q1nipi';
s1.charset='UTF-8';
s1.setAttribute('crossorigin','*');
s0.parentNode.insertBefore(s1,s0);
})();
</script>
<!--End of Tawk.to Script-->
    <canvas></canvas>
    <div class="wrapper">
        <form action="/login" method="POST">
            <h1>Login</h1>
            <div class="input-box">
                <input type="text" name="name" placeholder="Name" required>
                <i class="bx bxs-user-badge"></i>
            </div>
            <div class="input-box">
                <input type="password" name="password" placeholder="Password" required>
                <i class="bx bxs-lock"></i>
            </div>
            <div class="remember-forgot">
                <label><input type="checkbox">Remember Me</label>
                <a href="#">Forgot password?</a>
            </div>
            <button type="submit" class="btn">Login</button>
            <div class="register-link">
                <p>Don't have an Account? <a href="/signup">Register</a></p>
            </div>
            {{#if errorMessage}}
                <div class="error-message">{{errorMessage}}</div>
            {{/if}}
            {{#if successMessage}}
                <div id="success-message" class="success-message">{{successMessage}}</div>
            {{/if}}
        </form>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const successMessage = document.getElementById('success-message');
            if (successMessage) {
                setTimeout(() => {
                    successMessage.classList.add('fade-out');
                }, 2000);
            }
        });
        const canvas = document.querySelector("canvas");
        const ctx = canvas.getContext("2d");

        function setCanvasSize() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        }

        function resetTransform() {
            ctx.setTransform(1, 0, 0, 1, 0, 0);
            ctx.translate(canvas.width / 2, canvas.height / 2);
        }

        setCanvasSize();
        resetTransform();

        let maxLevel = 5;
        let branches = 2;
        let sides = 5;
        let gapBetweenTwoBranches = Math.random() * 150 + 150;
        let lengthOfTheBranches = Math.random() * 150 + 150;
        let spread = Math.random();
        let angle = Math.PI * 2 * spread;

        function drawLine(level) {
            if (level > maxLevel) return;

            ctx.strokeStyle = "white";
            ctx.lineWidth = 2;
            ctx.beginPath();
            ctx.moveTo(0, 0);
            ctx.lineTo(lengthOfTheBranches, 0);
            ctx.stroke();

            for (let i = 1; i <= branches; i++) {
                ctx.save();
                ctx.translate(gapBetweenTwoBranches * i, 0);
                ctx.scale(0.5, 0.5);

                ctx.save();
                ctx.rotate(angle);
                drawLine(level + 1);
                ctx.restore();

                ctx.save();
                ctx.rotate(-angle);
                drawLine(level + 1);
                ctx.restore();

                ctx.restore();
            }
        }

        function drawPattern() {
            ctx.clearRect(-canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);
            for (let i = 0; i < sides; i++) {
                drawLine(0);
                ctx.rotate((Math.PI * 2) / sides);
            }
        }

        drawPattern();

        window.addEventListener("click", () => {
            maxLevel = 5;
            branches = 2;
            sides = 5;
            gapBetweenTwoBranches = Math.random() * 150 + 150;
            lengthOfTheBranches = Math.random() * 150 + 150;
            spread = Math.random();
            angle = Math.PI * 2 * spread;

            resetTransform();
            drawPattern();
        });

        window.addEventListener("resize", () => {
            setCanvasSize();
            resetTransform();
            drawPattern();
        });
    </script>
</body>
</html>
